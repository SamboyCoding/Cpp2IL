name: .NET Core - Release

on:
  push:
    branches: [ master, new-analysis ]

jobs:
  release:

    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.x
        include-prerelease: true
    - name: Install dependencies
      run: dotnet restore
    - name: Build - Common Lib
      run: dotnet publish /p:Configuration=Release --no-restore
      working-directory: ./LibCpp2IL/
    - name: Build - Windows x64
      working-directory: ./Cpp2IL/
      run: dotnet publish /p:Configuration=Release /p:TargetFramework=net5.0 --no-restore -r win-x64
    - name: Build - Net Framework 4.8, Windows
      working-directory: ./Cpp2IL/
      run: dotnet publish /p:Configuration=Release /p:TargetFramework=net472 --no-restore
    - name: Build - Ubuntu x64
      working-directory: ./Cpp2IL/
      run: dotnet publish /p:Configuration=Release /p:TargetFramework=net5.0 --no-restore -r ubuntu-x64
    - name: Build - OSX x64
      working-directory: ./Cpp2IL/
      run: dotnet publish /p:Configuration=Release /p:TargetFramework=net5.0 --no-restore -r osx-x64
    - name: Run Tests
      run: |
        dotnet build
        dotnet test -v=n --no-build
    - name: Upload Common Lib Files
      uses: actions/upload-artifact@v2
      with:
        name: LibCpp2IL
        path: ./LibCpp2IL/bin/Release/netstandard2.0/publish/LibCpp2IL*
    - name: Upload Win x64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Cpp2IL-Windows
        path: ./Cpp2IL/bin/Release/net5.0/win-x64/publish/Cpp2IL.exe
    - name: Upload Netframework Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Cpp2IL-Netframework472-Windows
        path: ./Cpp2IL/bin/Release/net472/publish/
    - name: Upload Ubuntu x64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Cpp2IL-Linux
        path: ./Cpp2IL/bin/Release/net5.0/ubuntu-x64/publish/Cpp2IL
    - name: Upload OSX x64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Cpp2IL-Mac
        path: ./Cpp2IL/bin/Release/net5.0/osx-x64/publish/Cpp2IL
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: commit_${{ github.sha }}
#        release_name: Commit ${{ github.sha }}
#        draft: false
#        prerelease: true
#    - name: Release Windows Build
#      id: release-win
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./Cpp2IL/bin/Release/net5.0/win-x64/publish/Cpp2IL.exe
#        asset_name: Cpp2IL-Win.exe
#        asset_content_type: application/octet-stream
#    - name: Release Linux Build
#      id: release-linux
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./Cpp2IL/bin/Release/net5.0/ubuntu-x64/publish/Cpp2IL
#        asset_name: Cpp2IL-Linux
#        asset_content_type: application/octet-stream
#    - name: Release OSX Build
#      id: release-osx
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./Cpp2IL/bin/Release/net5.0/osx-x64/publish/Cpp2IL
#        asset_name: Cpp2IL-OSX
#        asset_content_type: application/octet-stream
